<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.platform.snail.portal.dao.MemberDao">
	<resultMap id="member" type="org.platform.snail.portal.model.Member">
		<id column="USERID" property="userId" jdbcType="INTEGER" />
		<result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="SEX" property="sex" jdbcType="CHAR" />
		<result column="HEADIMG" property="headImg" jdbcType="VARCHAR" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="LV" property="level" jdbcType="VARCHAR" />
		<result column="EXP" property="experience" jdbcType="VARCHAR" />
		<result column="COINS" property="coins" jdbcType="VARCHAR" />
		<result column="GEMS" property="gems" jdbcType="VARCHAR" />
		<result column="PK_CARD" property="pkCard" jdbcType="VARCHAR" />
		<result column="score" jdbcType="VARCHAR" property="score" />
		<result column="LAST_LOGIN_TIME" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />		
		<result column="ROOMID" property="roomId" jdbcType="VARCHAR" />
		<result column="GAMETYPE" property="gameType" jdbcType="VARCHAR" />
		<result column="HISTORY" property="history" jdbcType="VARCHAR" />
		<result column="WECHAT_ID" property="weChatId" jdbcType="VARCHAR" />
		<result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
		<result column="PROVINCE" property="province" jdbcType="VARCHAR" />
		<result column="Language" property="language" jdbcType="VARCHAR" />
		<result column="CITY" property="city" jdbcType="VARCHAR" />
		<result column="COUNTRY" property="country" jdbcType="VARCHAR" />
		<result column="UNION_ID" property="unionId" jdbcType="VARCHAR" />
		<result column="PRIVILEGE" property="privilege" jdbcType="VARCHAR" />
		<result column="INTRODUCER" property="introducer" jdbcType="INTEGER" />
		<result column="IS_AGENT" property="isAgent" jdbcType="VARCHAR" />
		<result column="AGENT_ID" property="agentId" jdbcType="INTEGER" />
		<result column="PARENT_AGENT_ID" property="parentAgentId"
			jdbcType="INTEGER" />
		<result column="AGENT_LEVEL" property="agentLevel" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="memberVo" extends="member"
		type="org.platform.snail.portal.vo.MemberVo">
	</resultMap>
	<select id="init" resultType="int">
		select 1 from dual
	</select>
	<sql id="usersPagingWhereCondition">
		from T_USERS t where 1=1
		<if test='condition.status!=null and condition.status!=""'>
			and t.status =#{condition.status,jdbcType=VARCHAR}
		</if>
		<if test='condition.name!=null and condition.name!=""'>
			and t.name like
			concat(#{condition.name,jdbcType=VARCHAR},'%')
		</if>
		<if test='condition.roomId!=null and condition.roomId!=""'>
			and t.roomId =#{condition.roomId,jdbcType=VARCHAR}
		</if>
		<if test='condition.mobile!=null and condition.mobile!=""'>
			and t.mobile=#{condition.mobile,jdbcType=VARCHAR}
		</if>
		<!-- agentSearch为1代表是 代理在使用 找到他的所有附属 -->
		<if test='agentSearch=="1" and agentSearchId!=null and agentSearchId!=""'>
			and EXISTS(
			SELECT *
			FROM
			(
			SELECT a.userid
			FROM t_users a
			WHERE a.parent_agent_id=${agentSearchId} UNION
			SELECT b.userid
			FROM
			t_users b
			WHERE
			EXISTS(
			SELECT *
			FROM t_users c
			WHERE
			c.parent_agent_id=${agentSearchId} AND
			c.agent_id=b.parent_agent_id)
			UNION
			SELECT d.userid
			FROM t_users d
			WHERE EXISTS(
			SELECT *
			FROM t_users b
			WHERE EXISTS(
			SELECT *
			FROM t_users
			c
			WHERE
			c.parent_agent_id=${agentSearchId} AND c.agent_id=b.parent_agent_id)
			AND
			b.agent_id=d.parent_agent_id)) r where r.userid=t.userid )
		</if>
	</sql>
	<select id="findUsersCount" resultType="int">
		SELECT COUNT(*)
		<include refid="usersPagingWhereCondition" />
	</select>
	<select id="findUsersList" resultMap="memberVo">
		select *
		<include refid="usersPagingWhereCondition" />
		<choose>
			<when test='orderBy!=null and orderBy!=""'>
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY t.userid
			</otherwise>
		</choose>
		limit #{start},#{limit}
	</select>

	<insert id="insertUsers" parameterType="org.platform.snail.portal.model.Member">
		insert into t_users
		(ACCOUNT,NAME,
		SEX, HEADIMG, LV,EXP,
		COINS,GEMS,PK_CARD,score,
		WECHAT_ID,MOBILE,
		IS_AGENT,AGENT_ID,
		LAST_LOGIN_TIME,CREATE_TIME,STATUS,
		province,language,city,country,
		union_id,privilege
		)
		values (
		#{member.account,jdbcType=VARCHAR},
		#{member.name,jdbcType=VARCHAR},
		#{member.sex,jdbcType=CHAR},
		#{member.headImg,jdbcType=VARCHAR},
		#{member.level,jdbcType=VARCHAR},
		#{member.experience,jdbcType=VARCHAR},
		#{member.coins,jdbcType=VARCHAR},
		#{member.gems,jdbcType=VARCHAR},
		#{member.pkCard,jdbcType=VARCHAR},
		#{member.score,jdbcType=VARCHAR},
		#{member.weChatId,jdbcType=VARCHAR},
		#{member.mobile,jdbcType=VARCHAR},
		#{member.isAgent,jdbcType=VARCHAR},
		#{member.agentId,jdbcType=VARCHAR},
		now(),now(),1,
		#{member.province,jdbcType=VARCHAR},
		#{member.language,jdbcType=VARCHAR},
		#{member.city,jdbcType=VARCHAR},
		#{member.country,jdbcType=VARCHAR},
		#{member.unionId,jdbcType=VARCHAR},
		#{member.privilege,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateUsersByPrimaryKey" parameterType="org.platform.snail.portal.model.Member">
		update
		t_users
		<set>
			<if test="member.name != null and member.name!=''">
				NAME = #{member.name,jdbcType=VARCHAR},
			</if>
			<if test="member.sex != null and member.sex!=''">
				SEX = #{member.sex,jdbcType=CHAR},
			</if>
			<if test="member.mobile != null and member.mobile!=''">
				mobile=
				#{member.mobile,jdbcType=VARCHAR},
			</if>
			<if test="member.headImg != null and member.headImg!=''">
				HEADIMG=
				#{member.headImg,jdbcType=VARCHAR},
			</if>
			<if test="member.coins != null and member.coins!=''">
				coins=
				#{member.coins,jdbcType=VARCHAR},
			</if>
			<if test="member.gems != null and member.gems!=''">
				GEMS=
				#{member.gems,jdbcType=VARCHAR},
			</if>
			<if test="member.pkCard != null and member.pkCard !=''">
				PK_CARD =
				#{member.pkCard,jdbcType=VARCHAR},
			</if>
			<if test="member.score != null and member.score !=''">
				SCORE=
				#{member.score,jdbcType=VARCHAR},
			</if>
			<if test="member.isAgent != null and member.isAgent !=''">
				IS_AGENT=
				#{member.isAgent,jdbcType=VARCHAR},
			</if>
			<if test="member.agentId != null and member.agentId !=''">
				AGENT_ID=
				#{member.agentId,jdbcType=INTEGER},
			</if>
			<if test="member.parentAgentId != null and member.parentAgentId !=''">
				PARENT_AGENT_ID=
				#{member.parentAgentId,jdbcType=INTEGER},
			</if>
			<if test="member.agentLevel != null and member.agentLevel !=''">
				AGENT_LEVEL=
				#{member.agentLevel,jdbcType=CHAR},
			</if>
			<if test="member.lastLoginTime != null and member.lastLoginTime !=''">
				LAST_LOGIN_TIME=
				#{member.lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="member.status != null and member.status !=''">
				STATUS=
				#{member.status,jdbcType=VARCHAR},
			</if>
		</set>
		where USERID =
		#{member.userId,jdbcType=INTEGER}
	</update>
	<update id="updateUsersStatusByPrimaryKey">
		update t_users
		set STATUS = #{status,jdbcType=CHAR}
		where userid = #{userId,jdbcType=INTEGER}
	</update>

	<select id="selectMemberVoByPrimaryKey" resultMap="memberVo"
		parameterType="java.lang.String">
		select *
		from t_users t
		where 1=1
		and t.userid =
		#{userId,jdbcType=INTEGER}
	</select>

	<select id="selectMemberVoByAgentId" resultMap="memberVo"
		parameterType="java.lang.String">
		select *
		from t_users t
		where 1=1
		and t.agent_id =
		#{agentId,jdbcType=INTEGER}
	</select>
	<select id="isExitUsersAccount" resultType="int">
		select count(*) from
		t_users where account=#{account}
	</select>
	<select id="isExitUsersWeChatId" resultType="int">
		select count(*) from
		t_users where weChat_id=#{weChatId}
	</select>
	<select id="isExitUsersMobile" resultType="int">
		select count(*) from
		t_users where mobile=#{mobile}
	</select>
	<select id="findMemberAccountInfo" resultMap="memberVo"
		parameterType="java.lang.String">
		select t.coins,t.gems,t.pk_card,t.score
		from t_users t
		where 1=1
		and t.agent_id=#{agentId}
	</select>
	<select id="isExitUsersUnionId" resultType="int">
		select count(*) from
		t_users where union_id=#{unionId}
	</select>
	<select id="selectMemberByUnionId" resultMap="memberVo"
		parameterType="java.lang.String">
		select *
		from t_users t
		where 1=1
		and t.union_id =
		#{unionId,jdbcType=VARCHAR}
	</select>
	<update id="updateMemberUserInfoByUserId" parameterType="org.platform.snail.portal.model.Member">
		update
		t_users t
		set
		t.wechat_id=#{member.weChatId,jdbcType=VARCHAR},
		t.name=#{member.name,jdbcType=VARCHAR},
		t.sex=#{member.sex,jdbcType=VARCHAR},
		t.city=#{member.city,jdbcType=VARCHAR},
		t.language=#{member.language,jdbcType=VARCHAR},
		t.province=#{member.province,jdbcType=VARCHAR},
		t.country=#{member.country,jdbcType=VARCHAR},
		t.headimg=#{member.headImg,jdbcType=VARCHAR},
		t.privilege=#{member.privilege,jdbcType=VARCHAR},
		t.last_login_time=now()
		where
		t.userid=#{member.userId,jdbcType=INTEGER}
	</update>
	<insert id="registerMemberByWeChat" parameterType="org.platform.snail.portal.model.Member">
		<selectKey resultType="java.lang.String" order="AFTER"
			keyProperty="member.userId">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_users
		(ACCOUNT,NAME,
		SEX, HEADIMG, LV,EXP,
		COINS,GEMS,PK_CARD,score,
		WECHAT_ID,MOBILE,
		IS_AGENT,AGENT_ID,
		LAST_LOGIN_TIME,CREATE_TIME,STATUS,
		province,language,city,country,
		union_id,privilege
		)
		values (
		#{member.account,jdbcType=VARCHAR},
		#{member.name,jdbcType=VARCHAR},
		#{member.sex,jdbcType=CHAR},
		#{member.headImg,jdbcType=VARCHAR},
		#{member.level,jdbcType=VARCHAR},
		#{member.experience,jdbcType=VARCHAR},
		#{member.coins,jdbcType=VARCHAR},
		#{member.gems,jdbcType=VARCHAR},
		#{member.pkCard,jdbcType=VARCHAR},
		#{member.score,jdbcType=VARCHAR},
		#{member.weChatId,jdbcType=VARCHAR},
		#{member.mobile,jdbcType=VARCHAR},
		#{member.isAgent,jdbcType=VARCHAR},
		#{member.agentId,jdbcType=VARCHAR},
		now(),now(),1,
		#{member.province,jdbcType=VARCHAR},
		#{member.language,jdbcType=VARCHAR},
		#{member.city,jdbcType=VARCHAR},
		#{member.country,jdbcType=VARCHAR},
		#{member.unionId,jdbcType=VARCHAR},
		#{member.privilege,jdbcType=VARCHAR}
		)
	</insert>

</mapper>