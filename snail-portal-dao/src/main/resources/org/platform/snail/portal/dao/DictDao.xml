<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.platform.snail.portal.dao.DictDao">
	<resultMap id="dict" type="org.platform.snail.portal.model.Dict">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="CATEGORY_ID" jdbcType="VARCHAR" property="categoryId" />
		<result column="CODE" jdbcType="VARCHAR" property="code" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="REMARK" jdbcType="VARCHAR" property="remark" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<resultMap id="dictVo" type="org.platform.snail.portal.vo.DictVo"
		extends="dict">
		<result column="CATEGORY_NAME" jdbcType="VARCHAR" property="categoryName" />
	</resultMap>	
	<sql id="Base_Column_List">
		ID, CATEGORY_ID, CODE, NAME, REMARK, CREATE_TIME
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="dict">
		select
		<include refid="Base_Column_List" />
		from dict
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from dict
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="org.platform.snail.portal.model.Dict">
		insert into dict (ID,
		CATEGORY_ID, CODE,
		NAME, REMARK, CREATE_TIME
		)
		values (0,
		#{categoryId,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, now()
		)
	</insert>
	<insert id="insertSelective" parameterType="org.platform.snail.portal.model.Dict">
		insert into dict
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="categoryId != null">
				CATEGORY_ID,
			</if>
			<if test="code != null">
				CODE,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="remark != null">
				REMARK,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				#{categoryId,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.portal.model.Dict">
		update dict
		<set>
			<if test="categoryId != null">
				CATEGORY_ID = #{categoryId,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.platform.snail.portal.model.Dict">
		update dict
		set
		CATEGORY_ID = #{categoryId,jdbcType=VARCHAR},
		CODE =
		#{code,jdbcType=VARCHAR},
		NAME = #{name,jdbcType=VARCHAR},
		REMARK =
		#{remark,jdbcType=VARCHAR},
		CREATE_TIME =
		#{createTime,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<sql id="whereCondition">
		from dict ,dict_category where
		dict.category_id=dict_category.category_id
		<if test="condition.categoryId!=null and condition.categoryId!=''">
			and dict.category_id
			=#{condition.categoryId,jdbcType=VARCHAR}
		</if>
		<if test="condition.name!=null and condition.name!=''">
			and dict.name like
			concat(#{condition.name,jdbcType=VARCHAR},'%')
		</if>
	</sql>
	<select id="findCount" resultType="int">
		SELECT COUNT(*)
		<include refid="whereCondition" />
	</select>
	<select id="findList" resultMap="dictVo">
		select
		dict.ID, dict.CATEGORY_ID, dict.CODE, dict.NAME, dict.REMARK,
		dict.CREATE_TIME,dict_category.name categoryName
		<include refid="whereCondition" />
		<choose>
			<when test="orderBy!=null and orderBy!=''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY id
			</otherwise>
		</choose>
		limit #{start},#{limit}
	</select>
	<select id="findListByCategoryId" resultMap="dict">

		select
		<include refid="Base_Column_List" />
		from dict where category_id=#{categoryId} order by create_time

	</select>
	<select id="isExitByNameAndCategoryId" resultType="int">
		select
		count(*)
		from
		dict where name=#{name}
	</select>
</mapper>