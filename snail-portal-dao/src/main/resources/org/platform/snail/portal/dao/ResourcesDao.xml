<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.platform.snail.portal.dao.ResourcesDao">
	<resultMap id="resources" type="org.platform.snail.portal.model.Resources">
		<id column="RESOURCES_ID" property="resourcesId" jdbcType="INTEGER" />
		<result column="PARENT_RESOURCES_ID" property="parentResourcesId"
			jdbcType="INTEGER" />
		<result column="RESOURCES_NAME" property="resourcesName"
			jdbcType="VARCHAR" />
		<result column="RESOURCES_URL" property="resourcesUrl"
			jdbcType="VARCHAR" />
		<result column="RESOURCES_PATH" property="resourcesPath"
			jdbcType="VARCHAR" />
		<result column="RESOURCES_ICON" property="resourcesIcon"
			jdbcType="VARCHAR" />
		<result column="RESOURCES_TYPE" property="resourcesType"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_ID" property="createUserId"
			jdbcType="INTEGER" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="resourcesVo" extends="resources"
		type="org.platform.snail.portal.vo.ResourcesVo">
		<result column="CREATE_USER_NAME" property="userName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		RESOURCES_ID, PARENT_RESOURCES_ID, RESOURCES_NAME,
		RESOURCES_URL, RESOURCES_PATH,
		RESOURCES_ICON, RESOURCES_TYPE,
		CREATE_TIME, CREATE_USER_ID, REMARK,
		status
	</sql>
	<select id="selectByPrimaryKey" resultMap="resources"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from resources
		where RESOURCES_ID = #{resourcesId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		update resources t 
		set t.status='0'
		where t.resources_id=#{resourcesId,jdbcType=INTEGER}	
	</delete>
	<insert id="insert" parameterType="org.platform.snail.portal.model.Resources">
		insert into resources
		(RESOURCES_ID, PARENT_RESOURCES_ID,
		RESOURCES_NAME,
		RESOURCES_URL,
		RESOURCES_PATH, RESOURCES_ICON,
		RESOURCES_TYPE, CREATE_TIME,
		CREATE_USER_ID,
		REMARK, status)
		values (#{resourcesId,jdbcType=INTEGER},
		#{parentResourcesId,jdbcType=INTEGER},
		#{resourcesName,jdbcType=VARCHAR},
		#{resourcesUrl,jdbcType=VARCHAR},
		#{resourcesPath,jdbcType=VARCHAR}, #{resourcesIcon,jdbcType=VARCHAR},
		#{resourcesType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{createUserId,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.platform.snail.portal.model.Resources">
		insert into resources
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="resourcesId != null">
				RESOURCES_ID,
			</if>
			<if test="parentResourcesId != null">
				PARENT_RESOURCES_ID,
			</if>
			<if test="resourcesName != null">
				RESOURCES_NAME,
			</if>
			<if test="resourcesUrl != null">
				RESOURCES_URL,
			</if>
			<if test="resourcesPath != null">
				RESOURCES_PATH,
			</if>
			<if test="resourcesIcon != null">
				RESOURCES_ICON,
			</if>
			<if test="resourcesType != null">
				RESOURCES_TYPE,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="createUserId != null">
				CREATE_USER_ID,
			</if>
			<if test="remark != null">
				REMARK,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="resourcesId != null">
				#{resourcesId,jdbcType=VARCHAR},
			</if>
			<if test="parentResourcesId != null">
				#{parentResourcesId,jdbcType=VARCHAR},
			</if>
			<if test="resourcesName != null">
				#{resourcesName,jdbcType=VARCHAR},
			</if>
			<if test="resourcesUrl != null">
				#{resourcesUrl,jdbcType=VARCHAR},
			</if>
			<if test="resourcesPath != null">
				#{resourcesPath,jdbcType=VARCHAR},
			</if>
			<if test="resourcesIcon != null">
				#{resourcesIcon,jdbcType=VARCHAR},
			</if>
			<if test="resourcesType != null">
				#{resourcesType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.portal.model.Resources">
		update resources
		<set>
			<if test="parentResourcesId != null">
				PARENT_RESOURCES_ID =
				#{parentResourcesId,jdbcType=INTEGER},
			</if>
			<if test="resourcesName != null">
				RESOURCES_NAME = #{resourcesName,jdbcType=VARCHAR},
			</if>
			<if test="resourcesUrl != null">
				RESOURCES_URL = #{resourcesUrl,jdbcType=VARCHAR},
			</if>
			<if test="resourcesPath != null">
				RESOURCES_PATH = #{resourcesPath,jdbcType=VARCHAR},
			</if>
			<if test="resourcesIcon != null">
				RESOURCES_ICON = #{resourcesIcon,jdbcType=VARCHAR},
			</if>
			<if test="resourcesType != null">
				RESOURCES_TYPE = #{resourcesType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
		</set>
		where RESOURCES_ID = #{resourcesId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.platform.snail.portal.model.Resources">
		update resources
		set PARENT_RESOURCES_ID = #{parentResourcesId,jdbcType=INTEGER},
		RESOURCES_NAME = #{resourcesName,jdbcType=VARCHAR},
		RESOURCES_URL =
		#{resourcesUrl,jdbcType=VARCHAR},
		RESOURCES_PATH =
		#{resourcesPath,jdbcType=VARCHAR},
		RESOURCES_ICON =
		#{resourcesIcon,jdbcType=VARCHAR},
		RESOURCES_TYPE =
		#{resourcesType,jdbcType=VARCHAR},
		REMARK = #{remark,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR}
		where RESOURCES_ID =
		#{resourcesId,jdbcType=INTEGER}
	</update>

	<sql id="whereCondition">
		from resources , users where resources.create_user_id=users.user_id

		<if test="condition.resourcesName!=null and condition.resourcesName!=''">
			and resources_name like
			concat(#{condition.resourcesName,jdbcType=VARCHAR},'%')
		</if>
		<if test="condition.resourcesType!=null and condition.resourcesType!=''">
			and resources_type
			=#{condition.resourcesType,jdbcType=VARCHAR}
		</if>
		<if test="condition.resourcesId!=null and condition.resourcesId!=''">
			and resources_id
			=#{condition.resourcesId,jdbcType=INTEGER}
		</if>
		<if
			test="condition.parentResourcesId!=null and condition.parentResourcesId!=''">
			and parent_resources_id
			=#{condition.parentResourcesId,jdbcType=INTEGER}
		</if>
	</sql>
	<select id="findCount" resultType="int">
		SELECT COUNT(*)
		<include refid="whereCondition" />
	</select>
	<select id="findList" resultMap="resourcesVo">
		select
		resources.RESOURCES_ID, resources.PARENT_RESOURCES_ID,
		resources.RESOURCES_NAME,
		resources.RESOURCES_URL,
		resources.RESOURCES_PATH,
		resources.RESOURCES_ICON,
		resources.RESOURCES_TYPE,
		resources.CREATE_TIME,
		resources.CREATE_USER_ID, resources.REMARK,
		resources.status,users.name CREATE_USER_NAME
		<include refid="whereCondition" />
		<choose>
			<when test="orderBy!=null and orderBy!=''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY RESOURCES_ID
			</otherwise>
		</choose>
		limit #{start},#{limit}
	</select>
	<select id="selectResourcesTreeList" resultType="map">
		SELECT
		t.resources_id ID,
		t.parent_resources_id PID,
		t.resources_name TEXT,
		''
		SRC,
		'' HREF,
		(SELECT
		COUNT(*) 
		FROM
		resources
		WHERE
		resources.parent_resources_id = t.resources_id) CHILD_COUNT
		FROM
		resources t
		ORDER BY t.RESOURCES_ID
	</select>

	<select id="isExitByName" resultType="int">
		select count(*) from
		resources where resources_name
		=#{name,jdbcType=VARCHAR}
	</select>
</mapper>